---
- hosts: endor
  remote_user: root

  vars_files:
    - ./variables.yml

  tasks:
    - name: ensure nginx is running
      service: name=nginx state=started

    - include: ./tasks/clone.yml

    - name: remove old consumer container
      docker: image=blog name=blog_consumer state=absent

    - name: remove old admin container
      docker: image=blog name=blog_admin state=absent

    - name: remove old docker image
      docker_image: path=/root/blog name="blog" state=absent

    - name: build new docker image
      docker_image: path=/root/blog name="blog" state=present

    - name: start new consumer container
      docker: "image=blog name=blog_consumer state=running ports=3100:3000 env=VIRTUAL_HOST=stevenschobert.com,NODE_ENV=production,GAUGES_KEY={{ gauges_key }},SENTRY_KEY={{ sentry_key }},LIBRATO_SOURCE=blog_consumer,LIBRATO_EMAIL={{ librato_email }},LIBRATO_TOKEN={{ librato_token }},COUCH_URL={{ couch_url }},COUCH_PORT={{ couch_port }},COUCH_DB={{ couch_db }},COUCH_USER={{ couch_user }},COUCH_PASS={{ couch_password }}"
      notify:
      - restart dockergen

    - name: start new admin container
      docker: "image=blog name=blog_admin command=start_admin state=running ports=3101:3000 env=VIRTUAL_HOST=editor.stevenschobert.com,NODE_ENV=production,SESSION_KEY={{ session_key }},COUCH_URL={{ couch_url }},COUCH_PORT={{ couch_port }},COUCH_DB={{ couch_db }},COUCH_USER={{ couch_user }},COUCH_PASS={{ couch_password }}"
      notify:
      - restart dockergen

  handlers:
    - name: restart dockergen
      service: name=dockergen state=restarted
